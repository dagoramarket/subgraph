type _Schema_
  @fulltext(
    name: "listingSearch"
    language: en
    algorithm: proximityRank
    include: [
      {
        entity: "Listing"
        fields: [
          { name: "title" }
          { name: "description" }
          { name: "tagSearch" }
        ]
      }
    ]
  )

type Block @entity {
  id: ID!
  expiresAtListings: [ActiveListing!]!
}

interface Listing @entity {
  id: ID!
  seller: Seller!

  commissionPercentage: BigInt!
  cashbackPercentage: BigInt!
  warranty: BigInt!

  expirationBlock: BigInt!

  ipfsHash: String! # hash of the ipfs content
  quantity: BigInt!

  price: BigInt!
  defaultToken: Bytes!
  title: String!
  description: String!
  allowedTokens: [Bytes!]!

  category: String!
  tags: [String!]!
  media: [String!]!

  tagSearch: String
  sellerStake: BigInt!
}

type ActiveListing implements Listing @entity {
  id: ID!
  seller: Seller!

  commissionPercentage: BigInt!
  cashbackPercentage: BigInt!
  warranty: BigInt!

  expirationBlock: BigInt!

  ipfsHash: String! # hash of the ipfs content
  quantity: BigInt!

  price: BigInt!
  defaultToken: Bytes!
  title: String!
  description: String!
  allowedTokens: [Bytes!]!

  category: String!
  tags: [String!]!
  media: [String!]!

  tagSearch: String
  sellerStake: BigInt!
}

type ValidListing implements Listing @entity {
  id: ID!
  seller: Seller!

  commissionPercentage: BigInt!
  cashbackPercentage: BigInt!
  warranty: BigInt!

  expiration: BigInt!

  ipfsHash: String! # hash of the ipfs content
  quantity: BigInt!

  price: BigInt!
  defaultToken: Bytes!
  title: String!
  description: String!
  allowedTokens: [Bytes!]!

  category: String!
  tags: [String!]!
  media: [String!]!

  tagSearch: String
  sellerStake: BigInt!
}

type InvalidListing implements Listing @entity {
  id: ID!
  seller: Seller!

  commissionPercentage: BigInt!
  cashbackPercentage: BigInt!
  warranty: BigInt!

  expiration: BigInt!

  ipfsHash: String! # hash of the ipfs content
  quantity: BigInt!

  price: BigInt!
  defaultToken: Bytes!
  title: String!
  description: String!
  allowedTokens: [Bytes!]!

  category: String!
  tags: [String!]!
  media: [String!]!

  tagSearch: String
  sellerStake: BigInt!
}

type Seller @entity {
  id: ID!
  balance: BigInt!
  lockedTokens: BigInt!
  activeListings: [ActiveListing!]! # @derivedFrom(field: "seller")
}

# type Location @entity {
#   id: ID!
#   latitude: BigDecimal!
#   longitude: BigDecimal!
# }
